<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Heatmap />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select slicer' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Area&quot;'>
        <calculation class='tableau' formula='&quot;Area&quot;' />
        <members>
          <member value='&quot;Area&quot;' />
          <member value='&quot;Year&quot;' />
        </members>
      </column>
      <column caption='Select cost' datatype='string' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Goods&quot;'>
        <calculation class='tableau' formula='&quot;Goods&quot;' />
        <members>
          <member value='&quot;Goods&quot;' />
          <member value='&quot;Meals&quot;' />
          <member value='&quot;Rent&quot;' />
          <member value='&quot;violence&quot;' />
          <member value='&quot;murder&quot;' />
          <member value='&quot;theft&quot;' />
        </members>
      </column>
      <column caption='Select crime slicer' datatype='string' name='[Select slicer (copy)_358317690764115969]' param-domain-type='list' role='measure' type='nominal' value='&quot;violence&quot;'>
        <calculation class='tableau' formula='&quot;violence&quot;' />
        <members>
          <member value='&quot;violence&quot;' />
          <member value='&quot;murder&quot;' />
          <member value='&quot;theft&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Select slicer (copy)_358317690764115969]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Area&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;violence&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Parameter 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Area&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='crime_data' inline='true' name='federated.0slc5sp0ej7jv91ep1e0406gmuop' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='violent_data 1' name='excel-direct.0yv7wnz1sug17v1f0g0jg1eq3jjn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/pcunn/Documents/NSS/projects/cost_of_living_and_crime/data/violent_data 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0yv7wnz1sug17v1f0g0jg1eq3jjn' name='goods_sorted' table='[goods_sorted$]' type='table'>
          <columns gridOrigin='A1:D206:no:A1:D206:0' header='yes' outcome='2'>
            <column datatype='string' name='Area' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='Year' ordinal='2' />
            <column datatype='real' name='Goods' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0yv7wnz1sug17v1f0g0jg1eq3jjn' name='violent_sorted' table='[violent_sorted$]' type='table'>
            <columns gridOrigin='A1:D542:no:A1:D542:0' header='yes' outcome='2'>
              <column datatype='string' name='Area' ordinal='0' />
              <column datatype='string' name='Year' ordinal='1' />
              <column datatype='integer' name='Population2' ordinal='2' />
              <column datatype='integer' name='Violent crime3' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0yv7wnz1sug17v1f0g0jg1eq3jjn' name='goods_sorted' table='[goods_sorted$]' type='table'>
            <columns gridOrigin='A1:D206:no:A1:D206:0' header='yes' outcome='2'>
              <column datatype='string' name='Area' ordinal='0' />
              <column datatype='string' name='City' ordinal='1' />
              <column datatype='string' name='Year' ordinal='2' />
              <column datatype='real' name='Goods' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0yv7wnz1sug17v1f0g0jg1eq3jjn' name='meal_sorted' table='[meal_sorted$]' type='table'>
            <columns gridOrigin='A1:D206:no:A1:D206:0' header='yes' outcome='2'>
              <column datatype='string' name='Area' ordinal='0' />
              <column datatype='string' name='City' ordinal='1' />
              <column datatype='string' name='Year' ordinal='2' />
              <column datatype='real' name='Meals' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0yv7wnz1sug17v1f0g0jg1eq3jjn' name='murder_sorted' table='[murder_sorted$]' type='table'>
            <columns gridOrigin='A1:D410:no:A1:D410:0' header='yes' outcome='2'>
              <column datatype='string' name='Area' ordinal='0' />
              <column datatype='string' name='Year' ordinal='1' />
              <column datatype='string' name='Population2' ordinal='2' />
              <column datatype='integer' name='Murder' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0yv7wnz1sug17v1f0g0jg1eq3jjn' name='rent_sorted' table='[rent_sorted$]' type='table'>
            <columns gridOrigin='A1:D206:no:A1:D206:0' header='yes' outcome='2'>
              <column datatype='string' name='Area' ordinal='0' />
              <column datatype='string' name='City' ordinal='1' />
              <column datatype='string' name='Year' ordinal='2' />
              <column datatype='integer' name='Rent' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0yv7wnz1sug17v1f0g0jg1eq3jjn' name='thief_sorted' table='[thief_sorted$]' type='table'>
            <columns gridOrigin='A1:E410:no:A1:E410:0' header='yes' outcome='2'>
              <column datatype='string' name='Area' ordinal='0' />
              <column datatype='string' name='Year' ordinal='1' />
              <column datatype='string' name='Population2' ordinal='2' />
              <column datatype='integer' name='Burglary' ordinal='3' />
              <column datatype='integer' name='Larceny-theft' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Area (goods!sorted)]' value='[goods_sorted].[Area]' />
          <map key='[Area (meal!sorted)]' value='[meal_sorted].[Area]' />
          <map key='[Area (murder!sorted)]' value='[murder_sorted].[Area]' />
          <map key='[Area (rent!sorted)]' value='[rent_sorted].[Area]' />
          <map key='[Area (thief!sorted)]' value='[thief_sorted].[Area]' />
          <map key='[Area]' value='[violent_sorted].[Area]' />
          <map key='[Burglary]' value='[thief_sorted].[Burglary]' />
          <map key='[City (meal!sorted)]' value='[meal_sorted].[City]' />
          <map key='[City (rent!sorted)]' value='[rent_sorted].[City]' />
          <map key='[City]' value='[goods_sorted].[City]' />
          <map key='[Goods]' value='[goods_sorted].[Goods]' />
          <map key='[Larceny-theft]' value='[thief_sorted].[Larceny-theft]' />
          <map key='[Meals]' value='[meal_sorted].[Meals]' />
          <map key='[Murder]' value='[murder_sorted].[Murder]' />
          <map key='[Population2 (murder!sorted)]' value='[murder_sorted].[Population2]' />
          <map key='[Population2 (thief!sorted)]' value='[thief_sorted].[Population2]' />
          <map key='[Population2]' value='[violent_sorted].[Population2]' />
          <map key='[Rent]' value='[rent_sorted].[Rent]' />
          <map key='[Violent crime3]' value='[violent_sorted].[Violent crime3]' />
          <map key='[Year (goods!sorted)]' value='[goods_sorted].[Year]' />
          <map key='[Year (meal!sorted)]' value='[meal_sorted].[Year]' />
          <map key='[Year (murder!sorted)]' value='[murder_sorted].[Year]' />
          <map key='[Year (rent!sorted)]' value='[rent_sorted].[Year]' />
          <map key='[Year (thief!sorted)]' value='[thief_sorted].[Year]' />
          <map key='[Year]' value='[violent_sorted].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[violent_sorted]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D542:no:A1:D542:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[goods_sorted]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D206:no:A1:D206:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[meal_sorted]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D206:no:A1:D206:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[murder_sorted]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D410:no:A1:D410:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[rent_sorted]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D206:no:A1:D206:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[thief_sorted]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E410:no:A1:E410:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[violent_sorted]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[violent!sorted_49EFB729C72F47DE9D70438AD125605B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[violent_sorted]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[violent!sorted_49EFB729C72F47DE9D70438AD125605B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population2]</local-name>
            <parent-name>[violent_sorted]</parent-name>
            <remote-alias>Population2</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[violent!sorted_49EFB729C72F47DE9D70438AD125605B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Violent crime3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Violent crime3]</local-name>
            <parent-name>[violent_sorted]</parent-name>
            <remote-alias>Violent crime3</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[violent!sorted_49EFB729C72F47DE9D70438AD125605B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area (goods!sorted)]</local-name>
            <parent-name>[goods_sorted]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[goods!sorted_414826C841174558B6FB7141E9A0756A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[goods_sorted]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[goods!sorted_414826C841174558B6FB7141E9A0756A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (goods!sorted)]</local-name>
            <parent-name>[goods_sorted]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[goods!sorted_414826C841174558B6FB7141E9A0756A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Goods</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Goods]</local-name>
            <parent-name>[goods_sorted]</parent-name>
            <remote-alias>Goods</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[goods!sorted_414826C841174558B6FB7141E9A0756A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area (meal!sorted)]</local-name>
            <parent-name>[meal_sorted]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meal!sorted_A1680E9C115F43768BF5705330D0D018]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City (meal!sorted)]</local-name>
            <parent-name>[meal_sorted]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meal!sorted_A1680E9C115F43768BF5705330D0D018]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (meal!sorted)]</local-name>
            <parent-name>[meal_sorted]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meal!sorted_A1680E9C115F43768BF5705330D0D018]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Meals</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Meals]</local-name>
            <parent-name>[meal_sorted]</parent-name>
            <remote-alias>Meals</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meal!sorted_A1680E9C115F43768BF5705330D0D018]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area (murder!sorted)]</local-name>
            <parent-name>[murder_sorted]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[murder!sorted_BCC03559C1494252AC8B35308C174092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (murder!sorted)]</local-name>
            <parent-name>[murder_sorted]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[murder!sorted_BCC03559C1494252AC8B35308C174092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Population2 (murder!sorted)]</local-name>
            <parent-name>[murder_sorted]</parent-name>
            <remote-alias>Population2</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[murder!sorted_BCC03559C1494252AC8B35308C174092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Murder</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Murder]</local-name>
            <parent-name>[murder_sorted]</parent-name>
            <remote-alias>Murder</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[murder!sorted_BCC03559C1494252AC8B35308C174092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area (rent!sorted)]</local-name>
            <parent-name>[rent_sorted]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[rent!sorted_4143EE78899B4600ABC66995B47B032A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City (rent!sorted)]</local-name>
            <parent-name>[rent_sorted]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[rent!sorted_4143EE78899B4600ABC66995B47B032A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (rent!sorted)]</local-name>
            <parent-name>[rent_sorted]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[rent!sorted_4143EE78899B4600ABC66995B47B032A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rent</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rent]</local-name>
            <parent-name>[rent_sorted]</parent-name>
            <remote-alias>Rent</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[rent!sorted_4143EE78899B4600ABC66995B47B032A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area (thief!sorted)]</local-name>
            <parent-name>[thief_sorted]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[thief!sorted_80BD6AB0E2334A508DFECC07843C3F42]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (thief!sorted)]</local-name>
            <parent-name>[thief_sorted]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[thief!sorted_80BD6AB0E2334A508DFECC07843C3F42]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Population2 (thief!sorted)]</local-name>
            <parent-name>[thief_sorted]</parent-name>
            <remote-alias>Population2</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[thief!sorted_80BD6AB0E2334A508DFECC07843C3F42]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Burglary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Burglary]</local-name>
            <parent-name>[thief_sorted]</parent-name>
            <remote-alias>Burglary</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[thief!sorted_80BD6AB0E2334A508DFECC07843C3F42]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Larceny-theft</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Larceny-theft]</local-name>
            <parent-name>[thief_sorted]</parent-name>
            <remote-alias>Larceny-theft</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[thief!sorted_80BD6AB0E2334A508DFECC07843C3F42]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Area1' datatype='string' name='[Area]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Slicer' datatype='string' name='[Calculation_358317690763481088]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Area&quot; THEN [Area]&#13;&#10;WHEN &quot;Year&quot; THEN [Year]&#13;&#10;END' />
      </column>
      <column caption='Cost Slicer' datatype='real' name='[Calculation_358317690783965187]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Goods&quot; THEN([Goods])&#13;&#10;WHEN &quot;Meals&quot; THEN SUM([Meals])&#13;&#10;WHEN &quot;Rent&quot; THEN SUM([Rent])&#13;&#10;END' />
      </column>
      <column caption='averaged mur' datatype='real' name='[Calculation_358317690806763528]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Murder])/SUM([Population2])*100' />
      </column>
      <column caption='avg violence' datatype='real' name='[Calculation_358317690808373257]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Violent crime3])/SUM([Population2])*100' />
      </column>
      <column caption='avg burg' datatype='real' name='[Calculation_358317690809839626]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Burglary])/SUM([Population2])*100' />
      </column>
      <column caption='avg theft' datatype='real' name='[Calculation_358317690811285515]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Larceny-theft])/SUM([Population2])*100' />
      </column>
      <column datatype='string' name='[City (meal!sorted)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City (rent!sorted)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='CrimeSlicer ' datatype='integer' name='[Cost Slicer (copy)_358317690793590788]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;violence&quot; THEN SUM([Violent crime3])&#13;&#10;WHEN &quot;murder&quot; THEN SUM([Murder])&#13;&#10;WHEN &quot;theft&quot; THEN SUM([Larceny-theft])&#13;&#10;END' />
      </column>
      <column aggregation='None' caption='Goods (bin)' datatype='integer' name='[Goods (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-1' formula='[Goods]' peg='0' size='3.1' />
      </column>
      <column datatype='real' name='[Goods]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Rent]' role='measure' type='quantitative' />
      <column caption='Color Slicer ' datatype='string' name='[Slicer (copy)_358317690764210178]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Select slicer (copy)_358317690764115969]&#13;&#10;WHEN &quot;Area&quot; THEN [Area]&#13;&#10;WHEN &quot;Year&quot; THEN [Year]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Year (goods!sorted)]' role='dimension' type='nominal' />
      <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='goods_sorted' datatype='table' name='[__tableau_internal_object_id__].[goods!sorted_414826C841174558B6FB7141E9A0756A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='meal_sorted' datatype='table' name='[__tableau_internal_object_id__].[meal!sorted_A1680E9C115F43768BF5705330D0D018]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='murder_sorted' datatype='table' name='[__tableau_internal_object_id__].[murder!sorted_BCC03559C1494252AC8B35308C174092]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='rent_sorted' datatype='table' name='[__tableau_internal_object_id__].[rent!sorted_4143EE78899B4600ABC66995B47B032A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='thief_sorted' datatype='table' name='[__tableau_internal_object_id__].[thief!sorted_80BD6AB0E2334A508DFECC07843C3F42]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='violent_sorted' datatype='table' name='[__tableau_internal_object_id__].[violent!sorted_49EFB729C72F47DE9D70438AD125605B]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[violent!sorted_49EFB729C72F47DE9D70438AD125605B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:violent!sorted_49EFB729C72F47DE9D70438AD125605B:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rent]' derivation='Attribute' name='[attr:Rent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rent]' derivation='Avg' name='[avg:Rent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rent]' derivation='Max' name='[max:Rent:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Rent]' derivation='Median' name='[med:Rent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rent]' derivation='Min' name='[min:Rent:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Rent]' derivation='None' name='[none:Rent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year (goods!sorted)]' derivation='None' name='[none:Year (goods!sorted):nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
      <column-instance column='[Rent]' derivation='StdevP' name='[stp:Rent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Goods]' derivation='Sum' name='[sum:Goods:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rent]' derivation='Sum' name='[sum:Rent:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Rent]' derivation='Sum' name='[sum:Rent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_358317690806763528]' derivation='User' name='[usr:Calculation_358317690806763528:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Area (violent!sorted1),Violent crime3 (violent!sorted1),YEAR(Year (violent!sorted1)))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Area (violent!sorted1):nk]' />
          <groupfilter function='level-members' level='[none:Violent crime3 (violent!sorted1):ok]' />
          <groupfilter function='level-members' level='[yr:Year (violent!sorted1):ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='State, City' />
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.886628' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.113372' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0slc5sp0ej7jv91ep1e0406gmuop].[sum:Goods:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0slc5sp0ej7jv91ep1e0406gmuop].[attr:Rent:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0slc5sp0ej7jv91ep1e0406gmuop].[avg:Rent:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0slc5sp0ej7jv91ep1e0406gmuop].[med:Rent:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Rent:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0slc5sp0ej7jv91ep1e0406gmuop].[stp:Rent:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0slc5sp0ej7jv91ep1e0406gmuop].[sum:Rent:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0slc5sp0ej7jv91ep1e0406gmuop].[__tableau_internal_object_id__].[cnt:violent!sorted_49EFB729C72F47DE9D70438AD125605B:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690806763528:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Rent:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>100</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>7017</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[min:Rent:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>100</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>7017</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:Rent:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>7017</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Year:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;2016&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2018&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;2015&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2014&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;2019&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2017&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Year (goods!sorted):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;2015&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2019&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;2018&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2017&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2016&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select slicer' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Area&quot;'>
          <calculation class='tableau' formula='&quot;Area&quot;' />
        </column>
        <column caption='Select cost' datatype='string' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Goods&quot;'>
          <calculation class='tableau' formula='&quot;Goods&quot;' />
        </column>
        <column caption='Select crime slicer' datatype='string' name='[Select slicer (copy)_358317690764115969]' param-domain-type='list' role='measure' type='nominal' value='&quot;violence&quot;'>
          <calculation class='tableau' formula='&quot;violence&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='goods_sorted' id='goods!sorted_414826C841174558B6FB7141E9A0756A'>
            <properties context=''>
              <relation connection='excel-direct.0yv7wnz1sug17v1f0g0jg1eq3jjn' name='goods_sorted' table='[goods_sorted$]' type='table'>
                <columns gridOrigin='A1:D206:no:A1:D206:0' header='yes' outcome='2'>
                  <column datatype='string' name='Area' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='Year' ordinal='2' />
                  <column datatype='real' name='Goods' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='meal_sorted' id='meal!sorted_A1680E9C115F43768BF5705330D0D018'>
            <properties context=''>
              <relation connection='excel-direct.0yv7wnz1sug17v1f0g0jg1eq3jjn' name='meal_sorted' table='[meal_sorted$]' type='table'>
                <columns gridOrigin='A1:D206:no:A1:D206:0' header='yes' outcome='2'>
                  <column datatype='string' name='Area' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='Year' ordinal='2' />
                  <column datatype='real' name='Meals' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='murder_sorted' id='murder!sorted_BCC03559C1494252AC8B35308C174092'>
            <properties context=''>
              <relation connection='excel-direct.0yv7wnz1sug17v1f0g0jg1eq3jjn' name='murder_sorted' table='[murder_sorted$]' type='table'>
                <columns gridOrigin='A1:D410:no:A1:D410:0' header='yes' outcome='2'>
                  <column datatype='string' name='Area' ordinal='0' />
                  <column datatype='string' name='Year' ordinal='1' />
                  <column datatype='string' name='Population2' ordinal='2' />
                  <column datatype='integer' name='Murder' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='rent_sorted' id='rent!sorted_4143EE78899B4600ABC66995B47B032A'>
            <properties context=''>
              <relation connection='excel-direct.0yv7wnz1sug17v1f0g0jg1eq3jjn' name='rent_sorted' table='[rent_sorted$]' type='table'>
                <columns gridOrigin='A1:D206:no:A1:D206:0' header='yes' outcome='2'>
                  <column datatype='string' name='Area' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='Year' ordinal='2' />
                  <column datatype='integer' name='Rent' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='thief_sorted' id='thief!sorted_80BD6AB0E2334A508DFECC07843C3F42'>
            <properties context=''>
              <relation connection='excel-direct.0yv7wnz1sug17v1f0g0jg1eq3jjn' name='thief_sorted' table='[thief_sorted$]' type='table'>
                <columns gridOrigin='A1:E410:no:A1:E410:0' header='yes' outcome='2'>
                  <column datatype='string' name='Area' ordinal='0' />
                  <column datatype='string' name='Year' ordinal='1' />
                  <column datatype='string' name='Population2' ordinal='2' />
                  <column datatype='integer' name='Burglary' ordinal='3' />
                  <column datatype='integer' name='Larceny-theft' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='violent_sorted' id='violent!sorted_49EFB729C72F47DE9D70438AD125605B'>
            <properties context=''>
              <relation connection='excel-direct.0yv7wnz1sug17v1f0g0jg1eq3jjn' name='violent_sorted' table='[violent_sorted$]' type='table'>
                <columns gridOrigin='A1:D542:no:A1:D542:0' header='yes' outcome='2'>
                  <column datatype='string' name='Area' ordinal='0' />
                  <column datatype='string' name='Year' ordinal='1' />
                  <column datatype='integer' name='Population2' ordinal='2' />
                  <column datatype='integer' name='Violent crime3' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Area]' />
                <expression op='[Area (goods!sorted)]' />
              </expression>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (goods!sorted)]' />
              </expression>
            </expression>
            <first-end-point object-id='violent!sorted_49EFB729C72F47DE9D70438AD125605B' />
            <second-end-point object-id='goods!sorted_414826C841174558B6FB7141E9A0756A' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Area]' />
                <expression op='[Area (meal!sorted)]' />
              </expression>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (meal!sorted)]' />
              </expression>
            </expression>
            <first-end-point object-id='violent!sorted_49EFB729C72F47DE9D70438AD125605B' />
            <second-end-point object-id='meal!sorted_A1680E9C115F43768BF5705330D0D018' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Area]' />
                <expression op='[Area (murder!sorted)]' />
              </expression>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (murder!sorted)]' />
              </expression>
            </expression>
            <first-end-point object-id='violent!sorted_49EFB729C72F47DE9D70438AD125605B' />
            <second-end-point object-id='murder!sorted_BCC03559C1494252AC8B35308C174092' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Area]' />
                <expression op='[Area (rent!sorted)]' />
              </expression>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (rent!sorted)]' />
              </expression>
            </expression>
            <first-end-point object-id='violent!sorted_49EFB729C72F47DE9D70438AD125605B' />
            <second-end-point object-id='rent!sorted_4143EE78899B4600ABC66995B47B032A' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Area]' />
                <expression op='[Area (thief!sorted)]' />
              </expression>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (thief!sorted)]' />
              </expression>
            </expression>
            <first-end-point object-id='violent!sorted_49EFB729C72F47DE9D70438AD125605B' />
            <second-end-point object-id='thief!sorted_80BD6AB0E2334A508DFECC07843C3F42' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_AE4E94B4FE0649F38F1C04D49415235F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='flux_of_goods' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='crime_data' name='federated.0slc5sp0ej7jv91ep1e0406gmuop' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0slc5sp0ej7jv91ep1e0406gmuop'>
            <column caption='Area1' datatype='string' name='[Area]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Rent]' role='measure' type='quantitative' />
            <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rent]' derivation='Sum' name='[sum:Rent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
          </pane>
        </panes>
        <rows>([federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk] * [federated.0slc5sp0ej7jv91ep1e0406gmuop].[sum:Rent:qk])</rows>
        <cols>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{6F8AB2DC-CAF7-46BE-9465-4FF12D653B75}' />
    </worksheet>
    <worksheet name='flux_of_food'>
      <table>
        <view>
          <datasources>
            <datasource caption='crime_data' name='federated.0slc5sp0ej7jv91ep1e0406gmuop' />
          </datasources>
          <datasource-dependencies datasource='federated.0slc5sp0ej7jv91ep1e0406gmuop'>
            <column datatype='string' name='[Area (meal!sorted)]' role='dimension' type='nominal' />
            <column caption='Area1' datatype='string' name='[Area]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Meals]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year (meal!sorted)]' role='dimension' type='nominal' />
            <column-instance column='[Area (meal!sorted)]' derivation='None' name='[none:Area (meal!sorted):nk]' pivot='key' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (meal!sorted)]' derivation='None' name='[none:Year (meal!sorted):nk]' pivot='key' type='nominal' />
            <column-instance column='[Meals]' derivation='Sum' name='[sum:Meals:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;     California&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <lod column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (meal!sorted):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area (meal!sorted):nk] * [federated.0slc5sp0ej7jv91ep1e0406gmuop].[sum:Meals:qk])</rows>
        <cols>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (meal!sorted):nk]</cols>
      </table>
      <simple-id uuid='{71DC0E6D-2870-4769-ABDA-1CCC957ECDA0}' />
    </worksheet>
    <worksheet name='flux_of_goods'>
      <table>
        <view>
          <datasources>
            <datasource caption='crime_data' name='federated.0slc5sp0ej7jv91ep1e0406gmuop' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select slicer' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Area&quot;'>
              <calculation class='tableau' formula='&quot;Area&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0slc5sp0ej7jv91ep1e0406gmuop'>
            <column datatype='string' name='[Area (goods!sorted)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Goods]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year (goods!sorted)]' role='dimension' type='nominal' />
            <column-instance column='[Area (goods!sorted)]' derivation='None' name='[none:Area (goods!sorted):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (goods!sorted)]' derivation='None' name='[none:Year (goods!sorted):nk]' pivot='key' type='nominal' />
            <column-instance column='[Goods]' derivation='Sum' name='[sum:Goods:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[sum:Goods:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (goods!sorted):nk]' />
              <size column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[sum:Goods:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area (goods!sorted):nk] * [federated.0slc5sp0ej7jv91ep1e0406gmuop].[sum:Goods:qk])</rows>
        <cols>([Parameters].[Parameter 1] / [federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (goods!sorted):nk])</cols>
      </table>
      <simple-id uuid='{32E1A627-EB00-4D48-936D-9BA097750828}' />
    </worksheet>
    <worksheet name='flux_of_rent'>
      <table>
        <view>
          <datasources>
            <datasource caption='crime_data' name='federated.0slc5sp0ej7jv91ep1e0406gmuop' />
          </datasources>
          <datasource-dependencies datasource='federated.0slc5sp0ej7jv91ep1e0406gmuop'>
            <column datatype='string' name='[Area (rent!sorted)]' role='dimension' type='nominal' />
            <column caption='Area1' datatype='string' name='[Area]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year (rent!sorted)]' role='dimension' type='nominal' />
            <column-instance column='[Area (rent!sorted)]' derivation='None' name='[none:Area (rent!sorted):nk]' pivot='key' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (rent!sorted)]' derivation='None' name='[none:Year (rent!sorted):nk]' pivot='key' type='nominal' />
            <column-instance column='[Rent]' derivation='Sum' name='[sum:Rent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;     California&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area (rent!sorted):nk] * [federated.0slc5sp0ej7jv91ep1e0406gmuop].[sum:Rent:qk])</rows>
        <cols>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (rent!sorted):nk]</cols>
      </table>
      <simple-id uuid='{71312BB1-BDEB-48A9-8F72-A68113592D95}' />
    </worksheet>
    <worksheet name='map'>
      <table>
        <view>
          <datasources>
            <datasource caption='crime_data' name='federated.0slc5sp0ej7jv91ep1e0406gmuop' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0slc5sp0ej7jv91ep1e0406gmuop'>
            <column caption='Area1' datatype='string' name='[Area]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Rent]' role='measure' type='quantitative' />
            <column-instance column='[Rent]' derivation='Attribute' name='[attr:Rent:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]' value='State'>
              <formatted-text>
                <run>State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]' />
              <tooltip column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[attr:Rent:ok]' />
              <geometry column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[Latitude (generated)]</rows>
        <cols>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{544A0D80-81FA-4D52-BE3B-CCB7B95AE84D}' />
    </worksheet>
    <worksheet name='murders'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Murders by population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='crime_data' name='federated.0slc5sp0ej7jv91ep1e0406gmuop' />
          </datasources>
          <datasource-dependencies datasource='federated.0slc5sp0ej7jv91ep1e0406gmuop'>
            <column caption='Area1' datatype='string' name='[Area]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='averaged mur' datatype='real' name='[Calculation_358317690806763528]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Murder])/SUM([Population2])*100' />
            </column>
            <column datatype='integer' name='[Murder]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population2]' role='measure' type='quantitative' />
            <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_358317690806763528]' derivation='User' name='[usr:Calculation_358317690806763528:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>([federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk] * [federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690806763528:qk])</rows>
        <cols>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{9490BB35-282D-42F8-9BD7-1A85EB25E242}' />
    </worksheet>
    <worksheet name='sneak_thief'>
      <table>
        <view>
          <datasources>
            <datasource caption='crime_data' name='federated.0slc5sp0ej7jv91ep1e0406gmuop' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select slicer' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Area&quot;'>
              <calculation class='tableau' formula='&quot;Area&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0slc5sp0ej7jv91ep1e0406gmuop'>
            <column caption='Area1' datatype='string' name='[Area]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Burglary]' role='measure' type='quantitative' />
            <column caption='avg burg' datatype='real' name='[Calculation_358317690809839626]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Burglary])/SUM([Population2])*100' />
            </column>
            <column caption='avg theft' datatype='real' name='[Calculation_358317690811285515]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Larceny-theft])/SUM([Population2])*100' />
            </column>
            <column datatype='integer' name='[Larceny-theft]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population2]' role='measure' type='quantitative' />
            <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_358317690809839626]' derivation='User' name='[usr:Calculation_358317690809839626:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_358317690811285515]' derivation='User' name='[usr:Calculation_358317690811285515:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;     California&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690809839626:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690811285515:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690811285515:qk]' />
              <lod column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690809839626:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690809839626:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690811285515:qk]' />
              <lod column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690809839626:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.7471270561218262' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690811285515:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690809839626:qk]' />
              <color column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690811285515:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.7471270561218262' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Parameters].[Parameter 1] * ([federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690809839626:qk] + [federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690811285515:qk]))</rows>
        <cols>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{2E6A82BD-EFBD-4A18-83DB-CED7DCEF7D3F}' />
    </worksheet>
    <worksheet name='violence'>
      <layout-options>
        <title>
          <formatted-text>
            <run>violence per population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='crime_data' name='federated.0slc5sp0ej7jv91ep1e0406gmuop' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select slicer' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Area&quot;'>
              <calculation class='tableau' formula='&quot;Area&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0slc5sp0ej7jv91ep1e0406gmuop'>
            <column caption='Area1' datatype='string' name='[Area]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='avg violence' datatype='real' name='[Calculation_358317690808373257]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Violent crime3])/SUM([Population2])*100' />
            </column>
            <column datatype='integer' name='[Population2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Violent crime3]' role='measure' type='quantitative' />
            <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_358317690808373257]' derivation='User' name='[usr:Calculation_358317690808373257:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Area:nk]' member='&quot;     California&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk] * [federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690808373257:qk])</rows>
        <cols>([Parameters].[Parameter 1] / [federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year:nk])</cols>
      </table>
      <simple-id uuid='{8653E0CE-A88D-4388-B7C4-595B842D7210}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='crime_data' name='federated.0slc5sp0ej7jv91ep1e0406gmuop' />
      </datasources>
      <datasource-dependencies datasource='federated.0slc5sp0ej7jv91ep1e0406gmuop'>
        <column caption='Area1' datatype='string' name='[Area]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Area]' derivation='None' name='[none:Area:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='22' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='20' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='15' name='map' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='19' name='flux_of_goods' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='21' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='3875' id='24' name='flux_of_goods' pane-specification-id='0' param='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (goods!sorted):nk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='641' h='81125' id='25' is-fixed='true' name='map' param='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]' type-v2='filter' values='database' w='16000' x='83200' y='4875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='30' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='641' h='81125' id='25' mode='checkdropdown' name='map' param='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]' type-v2='filter' values='database' w='16000' x='83200' y='4875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='map' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='19' is-fixed='true' name='flux_of_goods' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3875' id='24' name='flux_of_goods' pane-specification-id='0' param='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (goods!sorted):nk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6389F430-8653-4DE3-A6FC-0A0444035B18}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{66BFA831-6FA0-4526-91A7-4A3C5A0E2845}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='murders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[:Measure Names]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area (goods!sorted):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area (rent!sorted):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area (violent!sorted1):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Calculation_358317690806157319:qk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Goods (bin):ok]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Murder:nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Violent crime3 (violent!sorted1):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (goods!sorted):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (rent!sorted):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (violent!sorted1):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year:nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[sum:Goods:qk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[sum:Murder:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{536E96F6-4E27-461B-B11F-C70E599BA244}' />
    </window>
    <window class='worksheet' name='violence'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Select slicer (copy)_358317690764115969]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52290CC2-C6B4-40F1-8996-A91C9BCAA9F6}' />
    </window>
    <window class='worksheet' name='sneak_thief'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690811285515:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[Parameters].[Parameter 1]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Area&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year:nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[usr:Calculation_358317690811285515:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C2B26DC-1A7E-452D-9B0E-1CBB837E3410}' />
    </window>
    <window class='worksheet' name='flux_of_goods'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[sum:Goods:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (goods!sorted):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[Parameters].[Select slicer (copy)_358317690764115969]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area (goods!sorted):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area (violent!sorted1):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Population2 (violent!sorted1):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Violent crime3 (violent!sorted1):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Violent crime3:nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (goods!sorted):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (violent!sorted1):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year:nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[yr:Year (violent!sorted1):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CD6A848-12A7-4E22-88CC-58181438CDBE}' />
    </window>
    <window class='worksheet' name='flux_of_rent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area (rent!sorted):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (rent!sorted):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{28A1C08A-4D80-4A85-9B2F-0704CA901163}' />
    </window>
    <window class='worksheet' name='flux_of_food'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area (meal!sorted):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (meal!sorted):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2E4D2F9-FB4A-4EAC-9D6C-6DF6DFECF3D1}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='flux_of_goods'>
          <zoom type='entire-view' />
          <highlight field='[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (goods!sorted):nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='25' />
      <simple-id uuid='{63B0BBE8-BA74-4112-B2EB-A0DDF9245A7F}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{14FE8509-60D2-4772-8243-F5AE72161622}' />
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area (murder!sorted):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area (rent!sorted):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:City (rent!sorted):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year (murder!sorted):nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year:nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[sum:Rent:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DDAEE718-8BC9-48F4-B6AA-D96401F54A1D}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Area:nk]</field>
            <field>[federated.0slc5sp0ej7jv91ep1e0406gmuop].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66C009DA-86BA-45FC-BA81-13F8F6BB20FE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      oKIC/w+SWA/BnHqGuwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='flux_of_food' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='flux_of_goods' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='flux_of_rent' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
      /H/8puOeid+p6gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='murders' width='192'>
      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
      Z/5/GHO0uK4BZZYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='sneak_thief' width='192'>
      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
      CK95DiDEw/t/SHFSHNzghX8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='violence' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
